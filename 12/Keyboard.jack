// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static Array ram;
    /** Initializes the keyboard. */
    function void init() {
        let ram = 0;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return ram[24576];
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var int keyP;
        do Output.printChar(0);
        while(keyP = 0){
            let keyP = Keyboard.keyPressed(); 
        }
        do Output.backSpace();
        if (~(keyP = String.backSpace() )){
            do Output.printChar(keyP);
        }
        return keyP;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String str;
        var char chr;
        let chr = 0;
        let str = String.new(20);
        do Output.printString(message);
        while(~(chr = String.newLine())){
            let chr = Keyboard.readChar();
            do Sys.wait(200);
            if (chr = String.backSpace()){
                if (~(str.length() = 0)){
                    do Output.backSpace();
                    do str.eraseLastChar();
                }
            }else{
                let str = str.appendChar(chr);
            }
        }
        do str.eraseLastChar();
        // do Output.printString(str);
        // do Output.printInt(str.length());
        return str;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String str;
        var char chr;
        let chr = 0;
        let str = String.new(20);
        do Output.printString(message);
        while(~(chr = String.newLine())){
            let chr = Keyboard.readChar();
            do Sys.wait(200);
            if (chr = String.backSpace()){
                if (~(str.length() = 0)){
                    do Output.backSpace();
                    do str.eraseLastChar();
                }
            }else{
                let str = str.appendChar(chr);
            }
        }
        do str.eraseLastChar();
        // do Output.printString(str);
        // do Output.printInt(str.length());
        return str.intValue();
    }
}
