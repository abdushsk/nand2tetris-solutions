<tokens>
  <keyword> class </keyword>
  <identifier> Game </identifier>
  <symbol> { </symbol>
  <keyword> field </keyword>
  <keyword> int </keyword>
  <identifier> x1 </identifier>
  <symbol> , </symbol>
  <identifier> y1 </identifier>
  <symbol> ; </symbol>
  <keyword> constructor </keyword>
  <identifier> Game </identifier>
  <identifier> new </identifier>
  <symbol> ( </symbol>
  <keyword> int </keyword>
  <identifier> x </identifier>
  <symbol> , </symbol>
  <keyword> int </keyword>
  <identifier> y </identifier>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <keyword> var </keyword>
  <keyword> int </keyword>
  <identifier> z </identifier>
  <symbol> ; </symbol>
  <keyword> let </keyword>
  <identifier> x1 </identifier>
  <symbol> = </symbol>
  <identifier> x </identifier>
  <symbol> ; </symbol>
  <keyword> let </keyword>
  <identifier> y1 </identifier>
  <symbol> = </symbol>
  <identifier> y </identifier>
  <symbol> ; </symbol>
  <keyword> return </keyword>
  <keyword> this </keyword>
  <symbol> ; </symbol>
  <symbol> } </symbol>
  <keyword> method </keyword>
  <keyword> void </keyword>
  <identifier> print </identifier>
  <symbol> ( </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <keyword> do </keyword>
  <identifier> Output </identifier>
  <symbol> . </symbol>
  <identifier> printString </identifier>
  <symbol> ( </symbol>
  <stringConstant> sup? </stringConstant>
  <symbol> ) </symbol>
  <symbol> ; </symbol>
  <keyword> return </keyword>
  <symbol> ; </symbol>
  <symbol> } </symbol>
  <symbol> } </symbol>
</tokens>